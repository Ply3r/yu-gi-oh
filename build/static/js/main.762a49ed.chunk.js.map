{"version":3,"sources":["components/Form.js","components/Card.js","components/Filter.js","store/index.js","actions/index.js","App.js","components/Game.js","index.js"],"names":["Form","this","props","cardName","cardDescription","raridade","ataque","defesa","cardImage","onInputChange","onSaveButtonClick","isSaveButtonDisabled","htmlFor","className","placeholder","name","value","onChange","id","type","cols","rows","min","max","onClick","disabled","Component","Card","estrelas","c","push","src","alt","Filter","filterName","GAME_CHANGE","INITIAL_STATE","game","rootReducer","combineReducers","gameReducer","state","actions","store","createStore","gameAction","array","sorted","sort","Math","random","App","target","checked","setState","isButtonDisabled","cardTrunfo","savedCards","obj","json","JSON","stringify","localStorage","setItem","dispatch","deleteCard","newSavedCards","filter","item","cartas","hold","regex","RegExp","test","map","index","getItem","console","log","parse","class","to","React","Game","getState","nextCard","position","length","embaralhar","embaralharCartas","icon","faArrowLeft","cardRare","ReactDOM","render","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.762a49ed.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport '../css/form.css';\n\nclass Form extends Component {\n  render() {\n    const { cardName,\n      cardDescription,\n      raridade,\n      ataque,\n      defesa,\n      cardImage,\n      onInputChange,\n      onSaveButtonClick,\n      isSaveButtonDisabled,\n    } = this.props;\n\n    return (\n      <form>\n        <label htmlFor=\"name-input\">\n          Name:\n          <input\n            className=\"normal-input\"\n            placeholder=\"Digite o nome da carta\"\n            name=\"cardName\"\n            value={ cardName }\n            onChange={ onInputChange }\n            id=\"name-input\"\n            data-testid=\"name-input\"\n            type=\"text\"\n          />\n        </label>\n        <label htmlFor=\"description-input\">\n          description:\n          <textarea\n            data-testid=\"description-input\"\n            name=\"cardDescription\"\n            id=\"description-input\"\n            value={ cardDescription }\n            onChange={ onInputChange }\n            cols=\"30\"\n            rows=\"10\"\n          />\n        </label>\n        <label htmlFor=\"raridade\">\n          Raridade:\n          <input\n            className=\"normal-input\"\n            min=\"0\"\n            max=\"10\"\n            name=\"raridade\"\n            value={ raridade }\n            onChange={ onInputChange }\n            id=\"raridade\"\n            type=\"number\"\n          />\n        </label>\n        <label htmlFor=\"attr2-input\">\n          Ataque:\n          <input\n            className=\"normal-input\"\n            min=\"0\"\n            max=\"5000\"\n            name=\"ataque\"\n            value={ ataque }\n            onChange={ onInputChange }\n            id=\"attr2-input\"\n            data-testid=\"attr2-input\"\n            type=\"number\"\n          />\n        </label>\n        <label htmlFor=\"attr3-input\">\n          Defesa:\n          <input\n            className=\"normal-input\"\n            min=\"0\"\n            max=\"5000\"\n            name=\"defesa\"\n            value={ defesa }\n            onChange={ onInputChange }\n            id=\"attr3-input\"\n            data-testid=\"attr3-input\"\n            type=\"number\"\n          />\n        </label>\n        <label htmlFor=\"image-input\">\n          image:\n          <input\n            className=\"normal-input\"\n            name=\"cardImage\"\n            value={ cardImage }\n            onChange={ onInputChange }\n            data-testid=\"image-input\"\n            id=\"image-input\"\n            type=\"text\"\n          />\n        </label>\n        <button\n          className=\"save-button\"\n          data-testid=\"save-button\"\n          onClick={ onSaveButtonClick }\n          type=\"button\"\n          disabled={ isSaveButtonDisabled }\n        >\n          Salvar\n        </button>\n      </form>\n    );\n  }\n}\n\nForm.propTypes = {\n  cardName: PropTypes.string.isRequired,\n  cardDescription: PropTypes.string.isRequired,\n  cardAttr1: PropTypes.number.isRequired,\n  ataque: PropTypes.number.isRequired,\n  defesa: PropTypes.number.isRequired,\n  cardImage: PropTypes.string.isRequired,\n  cardRare: PropTypes.string.isRequired,\n  cardTrunfo: PropTypes.bool.isRequired,\n  hasTrunfo: PropTypes.bool.isRequired,\n  isSaveButtonDisabled: PropTypes.bool.isRequired,\n  onInputChange: PropTypes.func.isRequired,\n  onSaveButtonClick: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport '../css/card.css';\n\nclass Card extends Component {\n  render() {\n    const { cardName,\n      cardDescription,\n      raridade,\n      ataque,\n      defesa,\n      cardImage,\n    } = this.props;\n    const estrelas = [];\n    for(let c = 0; c < raridade; c += 1) {\n      estrelas.push(<div className=\"estrela\"></div>)\n    }\n    return (\n      <div className=\"card\">\n        <div className=\"card-intern\">\n          <h1 data-testid=\"name-card\">{ cardName }</h1>\n          <div className=\"raridade\">{ estrelas }</div>\n          <img data-testid=\"image-card\" src={ cardImage } alt={ cardName } />\n          <textarea cols=\"10\" rows=\"5\" className=\"description-card\" value={ cardDescription }/>\n          <div className=\"attr-container\">\n            <p>{ ataque }</p>\n            <p>{ defesa }</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nCard.propTypes = {\n  cardName: PropTypes.string.isRequired,\n  cardDescription: PropTypes.string.isRequired,\n  raridade: PropTypes.number.isRequired,\n  ataque: PropTypes.number.isRequired,\n  defesa: PropTypes.number.isRequired,\n  cardImage: PropTypes.string.isRequired,\n};\n\nexport default Card;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport '../css/filter.css';\n\nclass Filter extends Component {\n  render() {\n    const { filterName, onInputChange } = this.props;\n    return (\n      <div className=\"filtro\">\n        <h2>Filtros</h2>\n        <input\n          className=\"normal-input\"\n          placeholder=\"Filter by Name\"\n          name=\"filterName\"\n          onChange={ onInputChange }\n          data-testid=\"name-filter\"\n          value={ filterName }\n          type=\"text\"\n        />\n      </div>\n    );\n  }\n}\n\nFilter.propTypes = {\n  filterName: PropTypes.string.isRequired,\n  onInputChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { createStore, combineReducers } from 'redux';\n\nexport const GAME_CHANGE = 'GAME_CHANGE';\n\nconst INITIAL_STATE = { game: [] };\n\nconst gameReducer = (state = INITIAL_STATE, actions) => {\n  switch (actions.type) {\n  case GAME_CHANGE:\n    return { ...state, game: actions.game };\n  default:\n    return state;\n  }\n};\n\nconst rootReducer = combineReducers({ gameReducer });\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","import { GAME_CHANGE } from '../store';\n\nconst gameAction = (array) => {\n  const metade = 0.5;\n  const sorted = array.sort(() => Math.random() - metade);\n  return ({\n    type: GAME_CHANGE,\n    game: sorted,\n  });\n};\n\nexport default gameAction;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Form from './components/Form';\nimport Card from './components/Card';\nimport Filter from './components/Filter';\nimport store from './store';\nimport gameAction from './actions';\nimport './css/app.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cardName: '',\n      cardDescription: '',\n      raridade: 0,\n      ataque: 0,\n      defesa: 0,\n      cardImage: '',\n      isSaveButtonDisabled: true,\n      savedCards: [],\n      filterName: '',\n    };\n  }\n\n  onInputChange = ({ target }) => {\n    const { name, value } = target;\n    if (name === 'cardTrunfo' || name === 'filterTrunfo') {\n      const { checked } = target;\n      this.setState({ [name]: checked });\n    } else {\n      this.setState({ [name]: value },\n        () => {\n          this.isButtonDisabled();\n        });\n    }\n  }\n\n  onSaveButtonClick = () => {\n    const {\n      raridade,\n      ataque,\n      defesa,\n      cardName,\n      cardImage,\n      cardDescription,\n      cardTrunfo,\n      savedCards,\n    } = this.state;\n    const obj = {\n      raridade,\n      ataque,\n      defesa,\n      cardName,\n      cardImage,\n      cardDescription,\n      cardTrunfo,\n    };\n    const array = [...savedCards, obj]\n    const json = JSON.stringify(array)\n    localStorage.setItem('cards', json)\n    this.setState({ savedCards: array });\n    store.dispatch(gameAction(array));\n    this.setState({\n      cardName: '',\n      cardDescription: '',\n      raridade: 0,\n      ataque: 0,\n      defesa: 0,\n      cardImage: '',\n      cardTrunfo: false,\n    });\n  }\n\n  isButtonDisabled = () => {\n    const {\n      raridade,\n      ataque,\n      defesa,\n      cardName,\n      cardImage,\n      cardDescription,\n    } = this.state;\n    if (cardName && cardImage && cardDescription) {\n      this.setState({ isSaveButtonDisabled: false });\n      const maxPer = 5000;\n      const minPer = 0;\n      const maxRaridade = 10;\n      \n\n      if (!raridade || !ataque || !defesa) {\n        this.setState({ isSaveButtonDisabled: true });\n      }\n\n      if (raridade < minPer || ataque < minPer || defesa < minPer) {\n        this.setState({ isSaveButtonDisabled: true });\n      }\n\n      if (raridade > maxRaridade || ataque > maxPer || defesa > maxPer) {\n        this.setState({ isSaveButtonDisabled: true });\n      }\n    } else {\n      this.setState({ isSaveButtonDisabled: true });\n    }\n  }\n\n  deleteCard = ({ target: { id } }) => {\n    const { savedCards } = this.state;\n    const newSavedCards = savedCards.filter((item) => item.cardName !== id);\n    this.setState({ savedCards: newSavedCards });\n    const json = JSON.stringify(newSavedCards)\n    localStorage.setItem('cards', json)\n    store.dispatch(gameAction(newSavedCards))\n  }\n\n  cartas = () => {\n    const { savedCards, filterName } = this.state;\n    let hold = savedCards;\n    \n    if (filterName) {\n      const regex = new RegExp(filterName, 'i');\n      hold = savedCards.filter((item) => regex.test(item.cardName));\n    }\n\n    const res = hold\n      .map(\n        ({ cardName, cardDescription, raridade,\n          ataque, defesa, cardImage, cardTrunfo,\n        }, index) => (\n          <div className=\"card-show\" key={ index } id={ index }>\n            <Card\n              key={ cardName }\n              cardName={ cardName }\n              cardDescription={ cardDescription }\n              raridade={ raridade }\n              ataque={ ataque }\n              defesa={ defesa }\n              cardImage={ cardImage }\n              cardTrunfo={ cardTrunfo }\n            />\n            <button\n              onClick={ this.deleteCard }\n              id={ cardName }\n              className=\"bot-excluir\"\n              type=\"button\"\n            >\n              Excluir\n            </button>\n          </div>\n        ),\n      );\n    return res;\n  }\n\n  componentDidMount() {\n    const json = localStorage.getItem('cards');\n    console.log(json)\n    if (!json) return;\n    const array = JSON.parse(json)\n    this.setState({ savedCards: array })\n  }\n\n  render() {\n    const { cardName, cardDescription, raridade,\n      ataque, filterName, defesa, cardImage,\n      isSaveButtonDisabled } = this.state;\n    return (\n      <>\n        <div className=\"form-container\">\n          <div className=\"div-container form\">\n            <h2 className=\"title\">Adicionar nova carta</h2>\n            <Form\n              onInputChange={ this.onInputChange }\n              cardName={ cardName }\n              cardDescription={ cardDescription }\n              raridade={ raridade }\n              ataque={ ataque }\n              defesa={ defesa }\n              cardImage={ cardImage }\n              onSaveButtonClick={ this.onSaveButtonClick }\n              isSaveButtonDisabled={ isSaveButtonDisabled }\n            />\n          </div>\n          <div className=\"div-container card-container\">\n            <h2 className=\"pre-vizu\">Pre-vizualização:</h2>\n            <Card\n              onInputChange={ this.onInputChange }\n              cardName={ cardName }\n              cardDescription={ cardDescription }\n              raridade={ raridade }\n              ataque={ ataque }\n              defesa={ defesa }\n              cardImage={ cardImage }\n            />\n          </div>\n        </div>\n        <div class=\"container\">\n          <Link to=\"/yu-gi-oh/game\">\n            <button className=\"jogar-bot\" type=\"button\">Jogar</button>\n          </Link>\n        </div>\n        <div className=\"filtros-container\">\n          <Filter\n            filterName={ filterName }\n            onInputChange={ this.onInputChange }\n          />\n        </div>\n        <div className=\"grid-container\">\n          {this.cartas()}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\nimport Card from './Card';\nimport store from '../store';\nimport '../css/game.css';\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      game: [],\n      position: 0,\n      embaralhar: false,\n    };\n  }\n\n  componentDidMount() {\n    this.getState();\n  }\n\n  getState = () => {\n    const { gameReducer: { game } } = store.getState();\n    this.setState({ game });\n  }\n\n  nextCard = () => {\n    const { position, game } = this.state;\n    if (position < game.length - 1) {\n      this.setState({ position: position + 1 }, () => {\n        if (position + 1 === game.length - 1) {\n          this.setState({ embaralhar: true });\n        }\n      });\n    }\n  }\n\n  embaralharCartas = () => {\n    const { game } = this.state;\n    const metade = 0.5;\n    const sorted = game.sort(() => Math.random() - metade);\n    this.setState({ game: sorted, position: 0, embaralhar: false });\n  }\n\n  render() {\n    const { game, position, embaralhar } = this.state;\n    const obj = game[position];\n    return (\n      <div className=\"game-main-container\">\n        <Link to=\"/yu-gi-oh\">\n          <p className=\"link\"><FontAwesomeIcon icon={faArrowLeft}/> Voltar para a pagina inicial</p>\n        </Link>\n        <h1 className=\"title-game\">Yu Gi Oh!</h1>\n        <div className=\"cards-container-game\">\n          <div>\n            { game.length ? <Card\n              key={ obj.cardName }\n              cardName={ obj.cardName }\n              cardDescription={ obj.cardDescription }\n              raridade={ obj.raridade }\n              ataque={ obj.ataque }\n              defesa={ obj.defesa }\n              cardImage={ obj.cardImage }\n              cardRare={ obj.cardRare }\n              cardTrunfo={ obj.cardTrunfo }\n            /> : '' }\n          </div>\n          { !embaralhar ? <div onClick={ this.nextCard } className=\"next-card\" /> : ''}\n        </div>\n        <p>\n          Tamanho do baralho: \n          <span>{ game.length }</span>\n        </p>\n        { embaralhar\n          ? <button type=\"button\" onClick={ this.embaralharCartas }>Embaralhar</button>\n          : '' }\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport Game from './components/Game';\n\nReactDOM.render(\n  <>\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/yu-gi-oh/\" component={ App }/> \n        <Route path=\"/yu-gi-oh/game\" component={ Game }/> \n      </Switch>\n    </BrowserRouter>\n  </>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}